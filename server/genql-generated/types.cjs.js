module.exports = {
  scalars: [1, 2, 3, 5, 13, 15, 17, 18, 20, 22, 23, 24, 40, 52, 65, 67, 69],
  types: {
    Account: {
      AccountJSONField: [4],
      AccountProfileField: [8],
      RecordFieldResolver: [49],
      accountAvaliable: [1],
      accountId: [2],
      accountName: [3],
      accountProfile: [3],
      accountPwd: [3],
      accountRole: [13],
      accountType: [15],
      lastUpdateDate: [69],
      registryDate: [69],
      relatedRecord: [49],
      __typename: [3],
    },
    Boolean: {},
    ID: {},
    String: {},
    AccountJSON: {
      _JUST_FOR_TEST_: [5],
      __typename: [3],
    },
    Int: {},
    AccountLoginInput: {
      accountName: [3],
      accountPwd: [3],
      accountRole: [13],
      accountType: [15],
      __typename: [3],
    },
    AccountPasswordModifyInput: {
      accountId: [5],
      accountName: [3],
      newPassword: [3],
      prevPassword: [3],
      __typename: [3],
    },
    AccountProfile: {
      VIPLevel: [17],
      avatar: [3],
      isLifeTimeVIP: [1],
      selfIntro: [3],
      __typename: [3],
    },
    AccountProfileQueryInput: {
      VIPLevel: [17],
      avatar: [3],
      isLifeTimeVIP: [1],
      selfIntro: [3],
      __typename: [3],
    },
    AccountProfileUpdateInput: {
      VIPLevel: [17],
      avatar: [3],
      isLifeTimeVIP: [1],
      selfIntro: [3],
      __typename: [3],
    },
    AccountRegistryInput: {
      accountName: [3],
      accountPwd: [3],
      accountRole: [13],
      accountType: [15],
      __typename: [3],
    },
    AccountRelationsInput: {
      joinRecord: [1],
      __typename: [3],
    },
    AccountRole: {},
    AccountStatus: {
      data: [0],
      message: [3],
      success: [1],
      __typename: [3],
    },
    AccountType: {},
    AccountUnionResult: {
      on_AccountStatus: [14],
      on_LoginOrRegisterStatus: [42],
      on_IBaseStatus: [34],
      __typename: [3],
    },
    AccountVIPLevel: {},
    AuthDirectiveRoleEnum: {},
    Company: {
      description: [3],
      name: [3],
      registerDate: [69],
      scale: [20],
      __typename: [3],
    },
    CompanyScale: {},
    Cook: {
      WorkExperienceExtraFieldResolver: [
        72,
        {
          year: [22, 'Float!'],
        },
      ],
      experience: [72],
      name: [3],
      yearsOfExperience: [5],
      __typename: [3],
    },
    Float: {},
    Difficulty: {},
    DifficultyLevel: {},
    Executor: {
      ExecutorDescField: [27],
      ExecutorInnerTaskFieldResolver: [61],
      age: [22],
      avaliable: [1],
      desc: [3],
      isFool: [1],
      job: [40],
      joinDate: [69],
      lastUpdateDate: [69],
      name: [3],
      region: [52],
      relatedRecord: [49],
      spAgeField: [
        5,
        {
          param: [22],
        },
      ],
      tasks: [61],
      uid: [2],
      __typename: [3],
    },
    ExecutorCreateInput: {
      age: [5],
      avaliable: [1],
      isFool: [1],
      job: [40],
      name: [3],
      region: [52],
      __typename: [3],
    },
    ExecutorDesc: {
      level: [24],
      satisfaction: [5],
      successRate: [5],
      __typename: [3],
    },
    ExecutorDescUpdateInput: {
      level: [24],
      satisfaction: [5],
      successRate: [5],
      __typename: [3],
    },
    ExecutorRelationsInput: {
      joinRecord: [1],
      joinSubstance: [1],
      joinTasks: [1],
      __typename: [3],
    },
    ExecutorStatus: {
      data: [25],
      message: [3],
      success: [1],
      __typename: [3],
    },
    ExecutorUpdateInput: {
      age: [5],
      avaliable: [1],
      isFool: [1],
      job: [40],
      name: [3],
      region: [52],
      uid: [22],
      __typename: [3],
    },
    IAccount: {
      accountAvaliable: [1],
      accountId: [2],
      accountName: [3],
      accountProfile: [3],
      accountPwd: [3],
      accountRole: [13],
      accountType: [15],
      lastUpdateDate: [69],
      registryDate: [69],
      relatedRecord: [49],
      on_Account: [0],
      __typename: [3],
    },
    IAccountProfile: {
      VIPLevel: [17],
      avatar: [3],
      isLifeTimeVIP: [1],
      selfIntro: [3],
      on_AccountProfile: [8],
      __typename: [3],
    },
    IBaseStatus: {
      message: [3],
      success: [1],
      on_AccountStatus: [14],
      on_ExecutorStatus: [30],
      on_LoginOrRegisterStatus: [42],
      on_RecordStatus: [51],
      on_SubstanceStatus: [59],
      on_TaskStatus: [66],
      __typename: [3],
    },
    IExecutor: {
      age: [22],
      avaliable: [1],
      desc: [3],
      isFool: [1],
      job: [40],
      joinDate: [69],
      lastUpdateDate: [69],
      name: [3],
      region: [52],
      relatedRecord: [49],
      spAgeField: [5],
      tasks: [61],
      uid: [2],
      on_Executor: [25],
      __typename: [3],
    },
    IExecutorDesc: {
      level: [24],
      satisfaction: [5],
      successRate: [5],
      on_ExecutorDesc: [27],
      __typename: [3],
    },
    IRecord: {
      createDate: [69],
      lastUpdateDate: [69],
      recordAccount: [0],
      recordExecutor: [25],
      recordId: [2],
      recordSubstance: [55],
      recordTask: [61],
      on_Record: [49],
      __typename: [3],
    },
    ISubstance: {
      asylumed: [1],
      lastActiveDate: [69],
      relatedRecord: [49],
      relatedTask: [61],
      substanceAlive: [1],
      substanceAppearDate: [69],
      substanceDesc: [3],
      substanceId: [2],
      substanceIssues: [3],
      substanceLevel: [24],
      substanceName: [3],
      on_Substance: [55],
      __typename: [3],
    },
    ITask: {
      allowAbort: [1],
      assignee: [25],
      lastUpdateDate: [69],
      publishDate: [69],
      relatedRecord: [49],
      requireCleaner: [1],
      requirePsychologicalIntervention: [1],
      taskAccmplished: [1],
      taskAvaliable: [1],
      taskContent: [3],
      taskId: [2],
      taskLevel: [24],
      taskRate: [5],
      taskReward: [5],
      taskSource: [65],
      taskSubstance: [55],
      taskTarget: [67],
      taskTitle: [3],
      on_Task: [61],
      __typename: [3],
    },
    Job: {},
    LevelQueryResult: {
      on_Executor: [25],
      on_Task: [61],
      on_IExecutor: [35],
      on_ITask: [39],
      __typename: [3],
    },
    LoginOrRegisterStatus: {
      expiredDate: [5],
      message: [3],
      success: [1],
      token: [3],
      __typename: [3],
    },
    Mutation: {
      AccountDestory: [
        42,
        {
          accountName: [3, 'String!'],
          accountPwd: [3, 'String!'],
        },
      ],
      AccountLevelMutate: [
        16,
        {
          accountId: [5, 'Int!'],
          type: [15, 'AccountType!'],
        },
      ],
      AccountRegistry: [
        42,
        {
          account: [11, 'AccountRegistryInput!'],
        },
      ],
      AssignTask: [
        66,
        {
          taskId: [22, 'Float!'],
          uid: [22, 'Float!'],
        },
      ],
      CombineSubstanceAndTask: [
        59,
        {
          substanceId: [5, 'Int!'],
          taskId: [5, 'Int!'],
        },
      ],
      CreateExecutor: [
        30,
        {
          newExecutorInfo: [26, 'ExecutorCreateInput!'],
        },
      ],
      CreateNewTask: [
        66,
        {
          taskCreateParam: [62, 'TaskCreateInput!'],
        },
      ],
      CreateSubstance: [
        59,
        {
          substanceCreateParam: [56, 'SubstanceCreateInput!'],
        },
      ],
      DeleteExecutor: [
        30,
        {
          uid: [5, 'Int!'],
        },
      ],
      DeleteSubstance: [
        59,
        {
          substanceId: [5, 'Int!'],
        },
      ],
      DeleteTask: [
        66,
        {
          taskId: [22, 'Float!'],
        },
      ],
      FreezeAccount: [
        14,
        {
          accountId: [5, 'Int!'],
        },
      ],
      FreezeTask: [
        66,
        {
          taskId: [22, 'Float!'],
        },
      ],
      ModifyPassword: [
        42,
        {
          accountInfo: [7, 'AccountPasswordModifyInput!'],
        },
      ],
      MutateAccountProfile: [
        14,
        {
          accountId: [5, 'Int!'],
          modifiedAccountProfile: [10, 'AccountProfileUpdateInput!'],
        },
      ],
      MutateAccountRole: [42],
      MutateTaskLevel: [
        66,
        {
          level: [24, 'DifficultyLevel!'],
          taskId: [22, 'Float!'],
        },
      ],
      SendEmailVerifyCode: [42],
      SendPhoneVerifyCode: [42],
      ToggleTaskStatus: [
        66,
        {
          taskId: [22, 'Float!'],
        },
      ],
      UpdateExecutorBasicInfo: [
        30,
        {
          modifiedExecutorInfo: [31, 'ExecutorUpdateInput!'],
        },
      ],
      UpdateExecutorDesc: [
        30,
        {
          uid: [5, 'Int!'],
          userDesc: [28, 'ExecutorDescUpdateInput!'],
        },
      ],
      UpdateSubstanceInfo: [
        59,
        {
          substanceUpdateParam: [60, 'SubstanceUpdateInput!'],
        },
      ],
      UpdateTaskInfo: [
        66,
        {
          taskUpdateParam: [68, 'TaskUpdateInput!'],
        },
      ],
      pubSubMutation: [
        1,
        {
          message: [3],
        },
      ],
      pubSubMutationToDynamicTopic: [
        1,
        {
          message: [3],
          topic: [3, 'String!'],
        },
      ],
      publisherMutation: [
        1,
        {
          message: [3],
        },
      ],
      __typename: [3],
    },
    Notification: {
      date: [69],
      id: [2],
      message: [3],
      __typename: [3],
    },
    PaginationOptions: {
      offset: [5],
      take: [5],
      __typename: [3],
    },
    Query: {
      AccountLogin: [
        42,
        {
          account: [6, 'AccountLoginInput!'],
        },
      ],
      CheckAccountDetail: [
        14,
        {
          accountId: [5, 'Int!'],
          relations: [12],
        },
      ],
      CheckIsTokenValid: [
        42,
        {
          token: [3, 'String!'],
        },
      ],
      CheckVerifyCode: [42],
      ContainerRegisterTime: [69],
      QueryAccountByProfile: [
        14,
        {
          pagination: [45],
          profileQueryParams: [9],
          relations: [12],
        },
      ],
      QueryAllAccounts: [
        14,
        {
          pagination: [45],
          relations: [12],
        },
      ],
      QueryAllExecutors: [
        30,
        {
          pagination: [45],
          relations: [29],
        },
      ],
      QueryAllPrismaItems: [70],
      QueryAllPrismaUsers: [71],
      QueryAllRecords: [
        51,
        {
          relations: [50],
        },
      ],
      QueryAllSubstances: [
        59,
        {
          pagination: [45],
          relations: [58],
        },
      ],
      QueryAllTasks: [
        66,
        {
          pagination: [45],
          relations: [64],
        },
      ],
      QueryByDifficultyLevel: [
        41,
        {
          difficulty: [24],
          pagination: [45],
        },
      ],
      QueryExecutorByConditions: [
        30,
        {
          age: [5],
          avaliable: [1],
          isFool: [1],
          job: [40],
          name: [3],
          region: [52],
          relations: [29],
        },
      ],
      QueryExecutorByDesc: [
        30,
        {
          level: [24],
          pagination: [45],
          relations: [29],
          satisfaction: [5],
          successRate: [5],
        },
      ],
      QueryExecutorById: [
        30,
        {
          relations: [29],
          uid: [5, 'Int!'],
        },
      ],
      QueryExecutorTasks: [
        66,
        {
          pagination: [45],
          relations: [64],
          uid: [22, 'Float!'],
        },
      ],
      QueryOneSubstanceByConditions: [
        59,
        {
          relations: [58],
          substanceQueryParam: [57, 'SubstanceQueryInput!'],
        },
      ],
      QueryRecipeUnions: [48],
      QueryRecipesByDifficulty: [
        47,
        {
          difficulty: [23],
        },
      ],
      QueryRecipesByIngredients: [
        47,
        {
          ingredients: [3, '[String!]'],
        },
      ],
      QueryRecordById: [
        51,
        {
          recordId: [5, 'Int!'],
          relations: [50],
        },
      ],
      QuerySaltFishByCoefficient: [
        53,
        {
          coefficient: [5],
        },
      ],
      QuerySubstanceById: [
        59,
        {
          relations: [58],
          substanceId: [5, 'Int!'],
        },
      ],
      QuerySubstancesByConditions: [
        59,
        {
          pagination: [45],
          relations: [58],
          substanceQueryParam: [57, 'SubstanceQueryInput!'],
        },
      ],
      QueryTaskByConditions: [
        66,
        {
          relations: [64],
          taskQueryParams: [63, 'TaskQueryInput!'],
        },
      ],
      QueryTaskByID: [
        66,
        {
          relations: [64],
          taskId: [22, 'Float!'],
        },
      ],
      QueryTasksByConditions: [
        66,
        {
          pagination: [45],
          relations: [64],
          taskQueryParams: [63, 'TaskQueryInput!'],
        },
      ],
      Recipes: [47],
      currentDate: [69],
      __typename: [3],
    },
    Recipe: {
      CookExtraFieldResolver: [
        21,
        {
          name: [3, 'String!'],
        },
      ],
      RecipeExtraFieldResolver: [
        47,
        {
          title: [3, 'String!'],
        },
      ],
      cook: [21],
      description: [3],
      ingredients: [3],
      preparationDifficulty: [23],
      title: [3],
      __typename: [3],
    },
    RecipeUnionResult: {
      on_Cook: [21],
      on_Recipe: [47],
      on_SaltFish: [53],
      __typename: [3],
    },
    Record: {
      RecordInnerExecutorFieldResolver: [25],
      RecordInnerSubstanceFieldResolver: [55],
      RecordInnerTaskFieldResolver: [61],
      createDate: [69],
      lastUpdateDate: [69],
      recordAccount: [0],
      recordExecutor: [25],
      recordId: [2],
      recordSubstance: [55],
      recordTask: [61],
      __typename: [3],
    },
    RecordRelationsInput: {
      joinAccount: [1],
      joinExecutor: [1],
      joinSubstance: [1],
      joinTask: [1],
      __typename: [3],
    },
    RecordStatus: {
      data: [49],
      message: [3],
      success: [1],
      __typename: [3],
    },
    Region: {},
    SaltFish: {
      EngelCoefficient: [5],
      date: [69],
      fishName: [3],
      num: [5],
      role: [18],
      str: [3],
      __typename: [3],
    },
    Subscription: {
      normalSubscription: [44],
      subscriptionWithFilter: [44],
      subscriptionWithFilterToDynamicTopic: [
        44,
        {
          topic: [3, 'String!'],
        },
      ],
      __typename: [3],
    },
    Substance: {
      asylumed: [1],
      lastActiveDate: [69],
      relatedRecord: [49],
      relatedTask: [61],
      substanceAlive: [1],
      substanceAppearDate: [69],
      substanceDesc: [3],
      substanceId: [2],
      substanceIssues: [3],
      substanceLevel: [24],
      substanceName: [3],
      __typename: [3],
    },
    SubstanceCreateInput: {
      asylumed: [1],
      substanceAlive: [1],
      substanceIssues: [3],
      substanceLevel: [24],
      substanceName: [3],
      __typename: [3],
    },
    SubstanceQueryInput: {
      asylumed: [1],
      substanceAlive: [1],
      substanceIssues: [3],
      substanceLevel: [24],
      substanceName: [3],
      __typename: [3],
    },
    SubstanceRelationsInput: {
      joinAssignee: [1],
      joinRecord: [1],
      joinTask: [1],
      __typename: [3],
    },
    SubstanceStatus: {
      data: [55],
      message: [3],
      success: [1],
      __typename: [3],
    },
    SubstanceUpdateInput: {
      asylumed: [1],
      substanceAlive: [1],
      substanceId: [5],
      substanceIssues: [3],
      substanceLevel: [24],
      substanceName: [3],
      __typename: [3],
    },
    Task: {
      TaskInnerExecutorFieldResolver: [25],
      TaskInnerSubstanceFieldResolver: [55],
      allowAbort: [1],
      assignee: [25],
      lastUpdateDate: [69],
      publishDate: [69],
      relatedRecord: [49],
      requireCleaner: [1],
      requirePsychologicalIntervention: [1],
      taskAccmplished: [1],
      taskAvaliable: [1],
      taskContent: [3],
      taskId: [2],
      taskLevel: [24],
      taskRate: [5],
      taskReward: [5],
      taskSource: [65],
      taskSubstance: [55],
      taskTarget: [67],
      taskTitle: [3],
      __typename: [3],
    },
    TaskCreateInput: {
      allowAbort: [1],
      requireCleaner: [1],
      requirePsychologicalIntervention: [1],
      substanceId: [2],
      taskAvaliable: [1],
      taskContent: [3],
      taskLevel: [24],
      taskRate: [5],
      taskReward: [5],
      taskSource: [65],
      taskTarget: [67],
      taskTitle: [3],
      __typename: [3],
    },
    TaskQueryInput: {
      allowAbort: [1],
      requireCleaner: [1],
      requirePsychologicalIntervention: [1],
      taskAvaliable: [1],
      taskContent: [3],
      taskLevel: [24],
      taskRate: [5],
      taskReward: [5],
      taskSource: [65],
      taskTarget: [67],
      taskTitle: [3],
      __typename: [3],
    },
    TaskRelationsInput: {
      joinAssignee: [1],
      joinRecord: [1],
      joinSubstance: [1],
      __typename: [3],
    },
    TaskSource: {},
    TaskStatus: {
      data: [61],
      message: [3],
      success: [1],
      __typename: [3],
    },
    TaskTarget: {},
    TaskUpdateInput: {
      allowAbort: [1],
      requireCleaner: [1],
      requirePsychologicalIntervention: [1],
      taskAvaliable: [1],
      taskContent: [3],
      taskId: [5],
      taskLevel: [24],
      taskRate: [5],
      taskReward: [5],
      taskSource: [65],
      taskTarget: [67],
      taskTitle: [3],
      __typename: [3],
    },
    Timestamp: {},
    TodoItem: {
      content: [3],
      createdAt: [69],
      id: [2],
      owner: [71],
      ownerId: [5],
      title: [3],
      updatedAt: [69],
      __typename: [3],
    },
    User: {
      id: [2],
      items: [70],
      name: [3],
      nickName: [3],
      __typename: [3],
    },
    WorkExperience: {
      CompanyExtraFieldResolver: [
        19,
        {
          name: [3, 'String!'],
        },
      ],
      company: [19],
      isFired: [1],
      workYears: [5],
      __typename: [3],
    },
  },
};
